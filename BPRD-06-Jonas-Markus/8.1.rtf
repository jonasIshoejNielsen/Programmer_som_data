(i)
 (a)
 compile "ex11";;
 val it : Machine.instr list =
  [LDARGS; CALL (1,"L1"); STOP; Label "L1"; INCSP 1; INCSP 1; INCSP 100; GETSP;
   CSTI 99; SUB; INCSP 100; GETSP; CSTI 99; SUB; INCSP 100; GETSP; CSTI 99;
   SUB; INCSP 100; GETSP; CSTI 99; SUB; GETBP; CSTI 2; ADD; CSTI 1; STI;
   INCSP -1; GOTO "L3"; Label "L2"; GETBP; CSTI 103; ADD; LDI; GETBP; CSTI 2;
   ADD; LDI; ADD; CSTI 0; STI; INCSP -1; GETBP; CSTI 2; ADD; GETBP; CSTI 2;
   ADD; LDI; CSTI 1; ADD; STI; INCSP -1; INCSP 0; Label "L3"; GETBP; CSTI 2;
   ADD; LDI; GETBP; CSTI 0; ADD; LDI; SWAP; LT; NOT; IFNZRO "L2"; GETBP;
   CSTI 2; ADD; CSTI 1; STI; INCSP -1; GOTO "L5"; Label "L4"; GETBP; CSTI 204;
   ADD; LDI; GETBP; CSTI 2; ADD; LDI; ADD; GETBP; CSTI 305; ADD; LDI; GETBP;
   CSTI 2; ADD; LDI; ADD; CSTI 0; STI; STI; INCSP -1; GETBP; CSTI 2; ADD; ...]


 (b)
  java Machine ex11.out 8
  ....
  7 5 3 1 6 8 2 4
  8 2 4 1 7 5 3 6
  8 2 5 3 1 7 4 6
  8 3 1 6 2 5 7 4
  8 4 1 3 6 2 7 5
  
  Ran 0.055 seconds

(ii)
compileToFile (fromFile "ex3.c") "ex3.out";;
[
 LDARGS; CALL (1,"L1"); STOP;
 
 Label "L1"; INCSP 1; GETBP; CSTI 1; ADD; CSTI 0; STI; INCSP -1;
 GOTO "L3";

 Label "L2"; GETBP; CSTI 1; ADD; LDI; PRINTI; INCSP -1; GETBP; CSTI 1; ADD; GETBP; CSTI 1; ADD; LDI; CSTI 1; ADD; STI; INCSP -1; INCSP 0;
 
 Label "L3"; GETBP; CSTI 1; ADD; LDI; GETBP; CSTI 0; ADD; LDI; LT;
   IFNZRO "L2"; INCSP -1; RET 0]

//for ex3.c
//l1
void main(int args) {
 int x1;
 x1 = 0;  
 //args = 0, x1= 1
 //l3
 while (x1 < args) {
  //l2
  printi (x1);
  x1 = x1 +1; 
 }
}




compileToFile (fromFile "ex5.c") "ex5.out";;
[
 LDARGS; CALL (1,"L1"); STOP;

 Label "L1"; INCSP 1; GETBP; CSTI 1; ADD; GETBP; CSTI 0; ADD; LDI; STI; INCSP -1; INCSP 1; GETBP; CSTI 0; ADD; LDI; GETBP; CSTI 2; ADD;
 CALL (2,"L2"); INCSP -1; GETBP; CSTI 2; ADD; LDI; PRINTI; INCSP -1; INCSP -1; GETBP; CSTI 1; ADD; LDI; PRINTI; INCSP -1; INCSP -1; RET 0;
 
 Label "L2"; GETBP; CSTI 1; ADD; LDI; GETBP; CSTI 0; ADD; LDI; GETBP; CSTI 0; ADD; LDI; MUL; STI; INCSP -1; INCSP 0; RET 1]

//for ex5.c
//l1
void main(int args) {
 //l1
 int x1;
 x1 = args; 
 { //INCSP -1; INCSP 1;
  int x1;
  //l2
  L2(args, &x1)
  print x1;
 } //INCSP -1; INCSP -1;
 print x1;
 
 //args = 0, x1 = 1
}
void L2 (int x1, int *x2) {
 *x2 = x1 * x1;
}




java Machine ex3.out 10
0 1 2 3 4 5 6 7 8 9


java Machinetrace ex3.out 4

SeeFile 8_1_trace.txt
 


















