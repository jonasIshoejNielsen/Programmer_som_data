compile "ex8";;
  [LDARGS; CALL (0,"L1"); STOP;
   
   Label "L1"; INCSP 1; GETBP; CSTI 0; ADD; CSTI 20000000; STI; INCSP -1; GOTO "L3";
   
   Label "L2"; GETBP; CSTI 0; ADD; GETBP; CSTI 0; ADD; LDI; CSTI 1; SUB; STI; INCSP -1; INCSP 0;
   
   Label "L3"; GETBP; CSTI 0; ADD; LDI; IFNZRO "L2"; INCSP -1; RET -1]

Prog1:
0 20000000 16 7 0 1 2 9 18 4 25

CSTI 20000000
GOTO 7
CSTI 1		Label4: 
SUB
DUP		Label7: 
IFNZRO 4
STOP


The reason the ex8 is so much slower is, that each iteration of the loop have the extra steps of lookup variable, and reassign variable



compile "ex13"
[
LDARGS; CALL (1,"L1"); STOP;

Label "L1"; INCSP 1; GETBP; CSTI 1; ADD; CSTI 1889; STI; INCSP -1;
 GOTO "L3";

Label "L2";
  GETBP; CSTI 1; ADD; GETBP; CSTI 1; ADD; LDI; CSTI 1; ADD; STI; INCSP -1;
  GETBP; CSTI 1; ADD; LDI; CSTI 4; MOD; CSTI 0; EQ;
  IFZERO "L7"; GETBP; CSTI 1; ADD; LDI; CSTI 100; MOD; CSTI 0; EQ; NOT;
  IFNZRO "L9"; GETBP; CSTI 1; ADD; LDI; CSTI 400; MOD; CSTI 0; EQ;
  GOTO "L8";
Label "L9"; CSTI 1;
Label "L8"; GOTO "L6";

Label "L7"; CSTI 0;
Label "L6"; IFZERO "L4"; GETBP; CSTI 1; ADD; LDI; PRINTI; INCSP -1;
 GOTO "L5";

Label "L4"; INCSP 0;
Label "L5"; INCSP 0;
Label "L3"; GETBP; CSTI 1; ADD; LDI; GETBP; CSTI 0; ADD; LDI; LT; IFNZRO "L2"; INCSP -1; RET 0]




//explanation of the labels
L3 = start of whilestatement (x1 < args)
L2 = body of while
 x1 = x1 +1;
 ontain if ((x1 % 4 == 0) && !(x1 % 100 == 0) && (x1 % 400 == 0)) goTo L8 else false

L8 = print x1   //if 1 == 0 goto l4 else print ...      //body of the ifstatement






